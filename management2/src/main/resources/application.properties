# ===============================
# üåê MongoDB Configuration
# ===============================
# Use env var for production; fallback for local dev (REGENERATE PASSWORD BEFORE USING)
spring.data.mongodb.uri=${MONGO_DB_URI:mongodb+srv://manthan11016:1104@cluster0.s0jxemy.mongodb.net/vaccinedb?retryWrites=true&w=majority}

# ===============================
# ‚öôÔ∏è Server Configuration
# ===============================
server.port=${SERVER_PORT:8080}

# ===============================
# üîê JWT Configuration
# ===============================
# Use env var; fallback is dev-only (generate a strong one: openssl rand -base64 32)
jwt.secret.key=${JWT_SECRET_KEY:your-super-secret-key-that-is-at-least-256-bits-long}

# ===============================
# ü™™ Google OAuth2 Configuration
# ===============================
# Use env vars for production; fallbacks for local (REGENERATE CREDENTIALS BEFORE USING)
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:291291325859-h8hdqpt0nh5h98vtgm1rlmj9lalt9e50.apps.googleusercontent.com}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET: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}
spring.security.oauth2.client.registration.google.scope=openid,profile,email

# Optional: OAuth redirect URI (update for Render: https://your-app.onrender.com/login/oauth2/code/google)
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google

# ===============================
# üß© Logging Configuration
# ===============================
logging.level.com.vaccine.management=DEBUG
logging.level.org.springframework.security=INFO

